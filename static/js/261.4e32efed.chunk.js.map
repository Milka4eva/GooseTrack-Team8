{"version":3,"file":"static/js/261.4e32efed.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  background: #dcebf7; \n`;\nexport const SubContainer = styled.div` \n`;\nexport const FormContainer = styled.div`\n  max-width: 287px;\n  border-radius: 8px;\n  background: #fff;\n  padding: 40px 24px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 18px;\n  @media (min-width: 768px) {\n    max-width: 400px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\nexport const Title = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n  margin-bottom: 32px;\n  margin-top: 0;\n  display: inline-block;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 40px;\n  }\n`;\nexport const LabelInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nexport const SpanInputLogin = styled.span`\n  color: ${props => props.$errLogin};\n  font-size: 12px;\n  font-weight: 600;\n  line-height: normal;\n  margin-bottom: 8px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\nexport const SpanInputEmail = styled.span`\n  color: ${props => props.$errEmail};\n  font-size: 12px;\n  font-weight: 600;\n  line-height: normal;\n  margin-bottom: 8px;\n  margin-top: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\nexport const SpanInputPass = styled.span`\n  color: ${props => props.$errPass};\n  font-size: 12px;\n  font-weight: 600;\n  line-height: normal;\n  margin-bottom: 8px;\n  margin-top: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    margin-top: 18px;\n  }\n`;\nexport const LoginInput = styled(Field)`\n  border-radius: 8px;\n  border: ${props => props.$errLogin};\n  background: #fff;\n  max-width: 287px;\n  height: 46px;\n  padding: 0;\n  padding-left: 12px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n\n  ::placeholder {\n    color: #dce3e5;\n      font-size: 14px;\n      font-weight: 400;\n    line-height: 18px; /* 128.571% */\n  }\n  &:hover {\n    border-color: #111111;\n  }\n  @media (min-width: 768px) {\n    max-width: 400px;\n    height: 54px;\n    padding-left: 18px;\n    font-size: 16px;\n    ::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\nexport const EmailInput = styled(Field)`\n  border-radius: 8px;\n  border: ${props => props.$errEmail};\n  background: #fff;\n  max-width: 287px;\n  height: 46px;\n  padding: 0;\n  padding-left: 12px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n\n  ::placeholder {\n    color: #dce3e5;\n      font-size: 14px;\n      font-weight: 400;\n    line-height: 18px; /* 128.571% */\n  }\n  &:hover {\n    border-color: #111111;\n  }\n  @media (min-width: 768px) {\n    max-width: 400px;\n    height: 54px;\n    padding-left: 18px;\n    font-size: 16px;\n    ::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\nexport const PasswordInput = styled(Field)`\n  border-radius: 8px;\n  border: ${props => props.$errPass};\n  background: #fff;\n  max-width: 287px;\n  height: 46px;\n  padding: 0;\n  padding-left: 8px;\n\n  ::placeholder {\n    color: #dce3e5;\n      font-size: 14px;\n      font-weight: 400;\n    line-height: 18px; /* 128.571% */\n  }\n  &:hover {\n    border-color: #111111;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 400px;\n    height: 54px;\n    padding-left: 18px;\n    font-size: 16px;\n    ::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\nexport const ErrorMsg = styled.p`\n  color: #da1414;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-top: 8px;\n  margin-bottom: -22px;\n  padding-left: 12px;\n`;\nexport const CorrectMsg = styled.p`\n  color: #3cbc81;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-top: 8px;\n  margin-bottom: -22px;\n  padding-left: 12px;\n`;\nexport const ButtonSubmit = styled.button`\n  border-radius: 16px;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  width: 100%;\n  height: 46px;\n  margin-top: 32px;\n  border: none;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap:11px;\n  &:hover {\n    background: #2b78ef;\n  }\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    margin-top: 48px;\n    font-size: 18px;\n    line-height: 24px;\n    letter-spacing: -0.36px;\n  }\n`;\nexport const IconButtonSubmitSpan = styled.span`\n display:flex;\n align-items: center;\n  }\n`;\nexport const IconButtonSubmit = styled.svg`\n  width: 18px;\n  height: 18px;\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\nexport const Iconinput = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  bottom: 11px;\n  right: 18px;\n  @media (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\nexport const ButtonSignup = styled.button`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n  text-decoration-line: underline;\n  border: none;\n  background: #dcebf7;\n  margin-right: auto;\n  margin-left: auto;\n  &:hover {\n    color: #2b78ef;\n  }\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\nexport const SignupContainer = styled.div`\n  display: flex;\n`;\nexport const GusContainer = styled.div`\n  position: absolute;\n  visibility: hidden;\n  @media (min-width: 1440px) {\n    bottom: 0;\n    left: 60px;\n    visibility: visible;\n  }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { register } from '../../redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  MainContainer,\n  FormContainer,\n  Title,\n  LabelInput,\n  SpanInputLogin,\n  SpanInputEmail,\n  SpanInputPass,\n  LoginInput,\n  EmailInput,\n  ButtonSubmit,\n  ButtonSignup,\n  SignupContainer,\n  ErrorMsg,\n  CorrectMsg,\n  PasswordInput,\n  GusContainer,\n  IconButtonSubmit,\n  Iconinput,\n  IconButtonSubmitSpan,\n  SubContainer,\n} from './RegistrationForm.styled';\nimport { useMediaQuery } from '@chakra-ui/react';\nimport Icon from '../../images/icons.svg';\nimport { useNavigate } from 'react-router-dom';\nconst userShema = object({\n  name: string().required(),\n  email: string().email('This is an ERROR email').required(),\n  password: string().min(6).max(16).required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = () => {\nconst [isHidenGus] = useMediaQuery('(min-width: 1440px)');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage name={name} render={msg => <ErrorMsg>{msg}</ErrorMsg>} />\n    );\n  };\n\n  return (\n    <MainContainer>\n      <SubContainer>\n        <FormContainer>\n          <Title>Sign Up</Title>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={userShema}\n            onSubmit={handleSubmit}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <LabelInput htmlFor=\"name\">\n                  <SpanInputLogin\n                    $errLogin={\n                      errors.name && touched.name\n                        ? '#E74A3B'\n                        : touched.name\n                        ? '#3CBC81'\n                        : '#111'\n                    }\n                  >\n                    Name\n                  </SpanInputLogin>\n\n                  <LoginInput\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter your name\"\n                    $errLogin={\n                      errors.name && touched.name\n                        ? ' 1px solid #E74A3B'\n                        : touched.name\n                        ? '1px solid #3CBC81'\n                        : '1px solid rgba(220, 227, 229, 0.6)'\n                    }\n                  />\n                  {errors.name && touched.name ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailError'} />\n                    </Iconinput>\n                  ) : touched.name ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailDone'} />\n                    </Iconinput>\n                  ) : null}\n                  <FormError name=\"name\" />\n                </LabelInput>\n\n                <LabelInput htmlFor=\"email\">\n                  <SpanInputEmail\n                    $errEmail={\n                      errors.email && touched.email\n                        ? '#E74A3B'\n                        : touched.email\n                        ? '#3CBC81'\n                        : '#111'\n                    }\n                  >\n                    Email\n                  </SpanInputEmail>\n\n                  <EmailInput\n                    autoComplete=\"off\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    $errEmail={\n                      errors.email && touched.email\n                        ? ' 1px solid #E74A3B'\n                        : touched.email\n                        ? '1px solid #3CBC81'\n                        : '1px solid rgba(220, 227, 229, 0.6)'\n                    }\n                  />\n                  {errors.email && touched.email ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailError'} />\n                    </Iconinput>\n                  ) : touched.email ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailDone'} />\n                    </Iconinput>\n                  ) : null}\n\n                  {errors.email && touched.email ? (\n                    <FormError name=\"email\" />\n                  ) : touched.email ? (\n                    <CorrectMsg>This is an CORRECT email</CorrectMsg>\n                  ) : null}\n                </LabelInput>\n                <LabelInput htmlFor=\"password\">\n                  <SpanInputPass\n                    $errPass={\n                      errors.password && touched.password\n                        ? '#E74A3B'\n                        : touched.password\n                        ? '#3CBC81'\n                        : '#111'\n                    }\n                  >\n                    Password\n                  </SpanInputPass>\n\n                  <PasswordInput\n                    autoComplete=\"off\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter password\"\n                    $errPass={\n                      errors.password && touched.password\n                        ? ' 1px solid #E74A3B'\n                        : touched.password\n                        ? '1px solid #3CBC81'\n                        : '1px solid rgba(220, 227, 229, 0.6)'\n                    }\n                  />\n                  {errors.password && touched.password ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailError'} />\n                    </Iconinput>\n                  ) : touched.password ? (\n                    <Iconinput>\n                      <use href={Icon + '#EmailDone'} />\n                    </Iconinput>\n                  ) : null}\n                  <FormError name=\"password\" />\n                </LabelInput>\n                <ButtonSubmit type=\"submit\">\n                  <span> Sign Up </span>\n                  <IconButtonSubmitSpan>\n                    <IconButtonSubmit>\n                      <use href={Icon + '#logIn'} />\n                    </IconButtonSubmit>\n                  </IconButtonSubmitSpan>\n                </ButtonSubmit>\n              </Form>\n            )}\n          </Formik>\n        </FormContainer>\n\n        <SignupContainer>\n          <ButtonSignup type=\"button\" onClick={() => navigate('/login')}>Log In</ButtonSignup>\n        </SignupContainer>\n      </SubContainer>\n      {isHidenGus && (\n        <GusContainer>\n          <img\n            src={require('../../images/registrationGus.png')}\n            alt=\"rocket-gus\"\n            height={416}\n            width={400}\n          />\n        </GusContainer>\n      )}\n    </MainContainer>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from '../components/RegistrationForm/RegistrationForm';\n\nconst Registration = () => {\n  return (\n    <>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default Registration;"],"names":["MainContainer","styled","div","_templateObject","_taggedTemplateLiteral","SubContainer","_templateObject2","FormContainer","_templateObject3","Title","h1","_templateObject4","LabelInput","label","_templateObject5","SpanInputLogin","span","_templateObject6","props","$errLogin","SpanInputEmail","_templateObject7","$errEmail","SpanInputPass","_templateObject8","$errPass","LoginInput","Field","_templateObject9","EmailInput","_templateObject10","PasswordInput","_templateObject11","ErrorMsg","p","_templateObject12","CorrectMsg","_templateObject13","ButtonSubmit","button","_templateObject14","IconButtonSubmitSpan","_templateObject15","IconButtonSubmit","svg","_templateObject16","Iconinput","_templateObject17","ButtonSignup","_templateObject18","SignupContainer","_templateObject19","GusContainer","_templateObject20","userShema","object","name","string","required","email","password","min","max","initialValues","_useMediaQuery","useMediaQuery","isHidenGus","_slicedToArray","navigate","useNavigate","dispatch","useDispatch","FormError","_ref2","_jsx","ErrorMessage","render","msg","children","_jsxs","Formik","validationSchema","onSubmit","values","_ref","resetForm","register","_ref3","errors","touched","Form","htmlFor","autoComplete","type","placeholder","href","Icon","onClick","src","require","alt","height","width","_Fragment","RegistrationForm"],"sourceRoot":""}