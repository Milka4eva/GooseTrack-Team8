{"version":3,"file":"static/js/213.5311cc65.chunk.js","mappings":"+IA+PA,IAAe,IAA0B,yD,2OC9P5BA,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLAS1BC,EAAoBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iNAErB,SAAAG,GAAQ,OAAAA,EAALC,MAAkBC,YAAYC,OAAO,IASjDC,EAAwBV,EAAAA,GAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uFAKlCS,EAAwBZ,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,uGAMlCW,EAAgBd,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4BAG1Ba,EAAkBhB,EAAAA,GAAOiB,EAACC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,6OAQ5B,SAAAgB,GAAQ,OAAAA,EAALZ,MAAkBa,WAAWC,IAAI,IAKlCC,EAAiBtB,EAAAA,GAAOC,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qEAK3BqB,EAAaxB,EAAAA,GAAOyB,OAAMC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,+MACjB,SAAAwB,GAAQ,OAAAA,EAALpB,MAAkBC,YAAYC,OAAO,IACxC,SAAAmB,GAAQ,OAAAA,EAALrB,MAAkBsB,aAAaC,QAAQ,IAQnDC,EAAa/B,EAAAA,GAAOyB,OAAMO,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,6MACjB,SAAA8B,GAAQ,OAAAA,EAAL1B,MAAkBC,YAAYC,OAAO,IACxC,SAAAyB,GAAQ,OAAAA,EAAL3B,MAAkBsB,aAAaC,QAAQ,IAQnDK,EAAiBnC,EAAAA,GAAOoC,IAAGC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,6HAK5B,SAAAmC,GAAQ,OAAAA,EAAL/B,MAAkBa,WAAWmB,aAAa,IAI5CC,EAAiBxC,EAAAA,GAAOoC,IAAGK,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,iJAK5B,SAAAuC,GAAQ,OAAAA,EAALnC,MAAkBa,WAAWmB,aAAa,IAK5CI,EAAa3C,EAAAA,GAAO4C,KAAIC,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,gKAQxB2C,EAAa9C,EAAAA,GAAO4C,KAAIG,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,6JASxB6C,EAAehD,EAAAA,GAAOC,IAAGgD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,sIAId,SAAA+C,GAAQ,OAAAA,EAAL3C,MAAkBsB,aAAasB,eAAe,IAG5DC,GAAepD,EAAAA,GAAOqD,GAAEC,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,4JAO1B,SAAAoD,GAAQ,OAAAA,EAALhD,MAAkBa,WAAWC,IAAI,IAElCmC,GAAaxD,EAAAA,GAAOC,IAAGwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,QACvBuD,GAAW1D,EAAAA,GAAOC,IAAG0D,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,4GAMrByD,GAAW5D,EAAAA,GAAOiB,EAAC4C,IAAAA,GAAA1D,EAAAA,EAAAA,GAAA,uNAUrB,SAAA2D,GAAQ,OAAAA,EAALvD,MAAkBa,WAAWC,IAAI,IAElC0C,GAAY/D,EAAAA,GAAOC,IAAG+D,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,gGAIb,SAAA8D,GAAQ,OAAAA,EAAL1D,MAAkBsB,aAAasB,eAAe,IAC5D,SAAAe,GAAQ,OAAAA,EAAL3D,MAAkBsB,aAAasB,eAAe,IAE/CgB,GAAcnE,EAAAA,GAAOC,IAAGmE,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,kYAoBxBkE,GAAiBrE,EAAAA,GAAOC,IAAGqE,IAAAA,GAAAnE,EAAAA,EAAAA,GAAA,QAC3BoE,GAAqBvE,EAAAA,GAAO4C,KAAI4B,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,uOAUlC,SAAAsE,GAAQ,OAAAA,EAALlE,MAAkBa,WAAWC,IAAI,IAElCqD,GAAuB1E,EAAAA,GAAOC,IAAG0E,IAAAA,GAAAxE,EAAAA,EAAAA,GAAA,yIAQjCyE,GAAmB5E,EAAAA,GAAOC,IAAG4E,IAAAA,GAAA1E,EAAAA,EAAAA,GAAA,yRAc7B2E,GAAqB9E,EAAAA,GAAOC,IAAG8E,IAAAA,GAAA5E,EAAAA,EAAAA,GAAA,4TAgB/B6E,GAAkBhF,EAAAA,GAAOC,IAAGgF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,icAuB5B+E,GAAmBlF,EAAAA,GAAOC,IAAGkF,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,uJ,UCuH1C,OAxUA,WACE,IAAMiF,GAAWC,EAAAA,EAAAA,eACXC,GAAcC,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAM1D,SAAS2D,YAAY,IAC9DC,GAAQH,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAM1D,SAAS4D,KAAK,IACvDC,GAAkCC,EAAAA,EAAAA,UAAS,IAAIC,KAAKP,IAAaQ,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1DK,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCN,EAAAA,EAAAA,UAAS,GAAEO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8CV,EAAAA,EAAAA,UAAS,GAAEW,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAkCd,EAAAA,EAAAA,UAAS,GAAEe,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BlB,EAAAA,EAAAA,UAAS,GAAEmB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAlCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CtB,EAAAA,EAAAA,UAAS,GAAEuB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8B1B,EAAAA,EAAAA,UAAS,GAAE2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAlCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAqB,IACrBC,EAAkB,IAAI9B,KAAKP,GAC3BsC,EAAmB,WACvB,IAAMC,EAAU,IAAIhC,KAAKG,EAAU8B,QAAQ9B,EAAU+B,UAAY,IAC7DJ,GAAmBE,GACrB5B,EAAa4B,EAEjB,EA4GA,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAEMC,EAAO,CACXC,MAHYlC,EAAUmC,WAItBC,KAHWpC,EAAUqC,kBAKvBjD,GAASkD,EAAAA,EAAAA,IAAgBL,GAC3B,GAAG,CAAC7C,EAAUY,KACdgC,EAAAA,EAAAA,YAAU,YAhGsB,SAAAtC,GAC9B,IAAK6C,MAAMC,QAAQ9C,IAA2B,IAAjBA,EAAM+C,OAIjC,OAHA5B,EAAa,GACbJ,EAAmB,QACnBJ,EAAa,GAIf,IAIwBqC,EAJpBC,EAAY,EACZC,EAAkB,EAClBC,EAAY,EAAEC,GAAAC,EAAAA,EAAAA,GAECrD,GAAK,IAAxB,IAAAoD,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MACE,OADaR,EAAAS,MACAC,UACX,IAAK,QACHT,IACA,MACF,IAAK,cACHC,IACA,MACF,IAAK,OACHC,IAKL,OAAAQ,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CAED,IAAMC,EAAa9D,EAAM+C,OAEnBgB,EAAkBd,EAAYa,EAAc,IAC5CE,EAAwBd,EAAkBY,EAAc,IAE9D3C,GADwBgC,EAAYW,EAAc,KACtBG,WAC5BlD,EAAmBiD,EAAqBC,WACxCtD,EAAaoD,EAAeE,UAC9B,CA6DEC,CAAwBlE,EAC1B,GAAG,CAACA,KACJsC,EAAAA,EAAAA,YAAU,YA9DoB,SAAAtC,GAC5B,IAAK6C,MAAMC,QAAQ9C,IAA2B,IAAjBA,EAAM+C,OAIjC,OAHAhB,EAAW,GACXJ,EAAiB,QACjBJ,EAAW,GAIb,IAAMmB,EAAOpC,EAAU6D,cACjB3B,EAAQ4B,OAAO9D,EAAUmC,WAAa,GAAG4B,SAAS,EAAG,KACrDC,EAAMF,OAAO9D,EAAU+B,WAAWgC,SAAS,EAAG,KAC9CE,EAAU,GAAAC,OAAM9B,EAAI,KAAA8B,OAAIhC,EAAK,KAAAgC,OAAIF,GACjCG,EAAkBzE,EAAM0E,QAAO,SAAAC,GAAE,OAAIA,EAAGpC,OAASgC,CAAU,IAE7DtB,EAAY,EACZC,EAAkB,EAClBC,EAAY,EAEhB,IAAKN,MAAMC,QAAQ2B,IAA+C,IAA3BA,EAAgB1B,OAIrD,OAHAhB,EAAW,GACXJ,EAAiB,QACjBJ,EAAW,GAEZ,IAEiCqD,EAFjCC,GAAAxB,EAAAA,EAAAA,GAEkBoB,GAAe,IAAlC,IAAAI,EAAAvB,MAAAsB,EAAAC,EAAAtB,KAAAC,MACE,OADaoB,EAAAnB,MACAC,UACX,IAAK,QACHT,IACA,MACF,IAAK,cACHC,IACA,MACF,IAAK,OACHC,IAKL,OAAAQ,GAAAkB,EAAAjB,EAAAD,EAAA,SAAAkB,EAAAhB,GAAA,CAED,IAAMC,EAAaW,EAAgB1B,OAC7BgB,EAAkBd,EAAYa,EAAc,IAC5CE,EAAwBd,EAAkBY,EAAc,IAE9D/B,GADwBoB,EAAYW,EAAc,KACxBG,WAC1BtC,EAAiBqC,EAAqBC,WACtC1C,EAAWwC,EAAeE,UAC5B,CAeEa,CAAsB9E,EAExB,GAAG,CAACA,KAEF+E,EAAAA,GAAAA,MAACrK,EAAiB,CAAAsK,SAAA,EAChBD,EAAAA,GAAAA,MAAC7J,EAAqB,CAAA8J,SAAA,EACpBD,EAAAA,GAAAA,MAAC/J,EAAqB,CAAAgK,SAAA,EACpBC,EAAAA,GAAAA,KAACC,IAAe,CACdC,iBAAkB,EAClBC,WAAW,gBACXC,QAAS,IAAIlF,KACbmF,SAAUhF,EACViF,UAAU,oBACVC,SAAU,SAAAjD,GAAI,OAAIhC,EAAagC,EAAK,EACpCkD,yBAAyB,OAE3BV,EAAAA,GAAAA,MAACnJ,EAAc,CAAAoJ,SAAA,CACZ1E,GAAa2B,GACZgD,EAAAA,GAAAA,KAAC5I,EAAU,CAACqJ,QAASxD,EAAkByD,UAAU,EAAKX,UACpDC,EAAAA,GAAAA,KAACnI,EAAc,CACb6I,UAAU,EACVC,MAAO,CACLC,OAAQ,WACRb,UAEFC,EAAAA,GAAAA,KAAA,OAAKa,KAAMC,EAAAA,EAAQ,4BAIvBd,EAAAA,GAAAA,KAAC5I,EAAU,CAACqJ,QAASxD,EAAiB8C,UACpCC,EAAAA,GAAAA,KAACnI,EAAc,CAAAkI,UACbC,EAAAA,GAAAA,KAAA,OAAKa,KAAMC,EAAAA,EAAQ,4BAKzBd,EAAAA,GAAAA,KAACnJ,EAAU,CAAC4J,QA5IG,WACvB,IAAMM,EAAU,IAAI7F,KAAKG,EAAU8B,QAAQ9B,EAAU+B,UAAY,IACjE9B,EAAayF,EACf,EAyIgDhB,UACpCC,EAAAA,GAAAA,KAACxI,EAAc,CAAAuI,UACbC,EAAAA,GAAAA,KAAA,OAAKa,KAAMC,EAAAA,EAAQ,kCAK3BhB,EAAAA,GAAAA,MAAC3J,EAAa,CAAA4J,SAAA,EACZD,EAAAA,GAAAA,MAACzJ,EAAe,CAAA0J,SAAA,EACdC,EAAAA,GAAAA,KAAChI,EAAU,IAAG,aAGhB8H,EAAAA,GAAAA,MAACzJ,EAAe,CAAA0J,SAAA,EACdC,EAAAA,GAAAA,KAAC7H,EAAU,IAAG,qBAKpB2H,EAAAA,GAAAA,MAACzH,EAAY,CAAA0H,SAAA,EACXC,EAAAA,GAAAA,KAACvH,GAAY,CAAAsH,SAAC,WACdD,EAAAA,GAAAA,MAACjH,GAAU,CAAAkH,SAAA,EACTD,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,SACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,QACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,QACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,QACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,QACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAAC/G,GAAQ,CAAAgH,SAAA,EACPC,EAAAA,GAAAA,KAAC/G,GAAQ,CAAA8G,SAAC,OACVC,EAAAA,GAAAA,KAAC5G,GAAS,QAEZ0G,EAAAA,GAAAA,MAACtG,GAAW,CAAAuG,SAAA,EACVC,EAAAA,GAAAA,KAACtG,GAAc,CAAAqG,UACbD,EAAAA,GAAAA,MAAClG,GAAkB,CAAAmG,SAAA,EACjBD,EAAAA,GAAAA,MAAC/F,GAAoB,CAAAgG,SAAA,EACnBC,EAAAA,GAAAA,KAAC/F,GAAgB,CACf0G,MAAO,CACLK,OAAO,GAADzB,OAAKxC,GAAsBV,EAAU,KAAI,OAC/C0D,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBV,EAAU,KAAO,GAAE,OAE3C0D,SAAA,CAED1D,EAAQ,UAGb2D,EAAAA,GAAAA,KAACzF,GAAgB,KACjByF,EAAAA,GAAAA,KAAC7F,GAAkB,CACjBwG,MAAO,CACLK,OAAO,GAADzB,OAAKxC,GAAsBtB,EAAY,KAAI,OACjDsE,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBtB,EAAY,KAAO,GAAE,OAE7CsE,SAAA,CAEDtE,EAAU,YAGM,cAI3BuE,EAAAA,GAAAA,KAACtG,GAAc,CAAAqG,UACbD,EAAAA,GAAAA,MAAClG,GAAkB,CAAAmG,SAAA,EACjBD,EAAAA,GAAAA,MAAC/F,GAAoB,CAAAgG,SAAA,EACnBC,EAAAA,GAAAA,KAAC/F,GAAgB,CACf0G,MAAO,CACLK,OAAO,GAADzB,OAAKxC,GAAsBN,EAAgB,KAAI,OACrDsD,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBN,EAAgB,KAAO,GAAE,OAEjDsD,SAAA,CAEDtD,EAAc,UAGnBuD,EAAAA,GAAAA,KAACzF,GAAgB,KACjByF,EAAAA,GAAAA,KAAC7F,GAAkB,CACjBwG,MAAO,CACLK,OAAO,GAADzB,OACJxC,GAAsBlB,EAAkB,KAAI,OAE9CkE,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBlB,EAAkB,KAAO,GAAE,OAEnDkE,SAAA,CAEDlE,EAAgB,YAGA,oBAI3BmE,EAAAA,GAAAA,KAACtG,GAAc,CAAAqG,UACbD,EAAAA,GAAAA,MAAClG,GAAkB,CAAAmG,SAAA,EACjBD,EAAAA,GAAAA,MAAC/F,GAAoB,CAAAgG,SAAA,EACnBC,EAAAA,GAAAA,KAAC/F,GAAgB,CACf0G,MAAO,CACLK,OAAO,GAADzB,OAAKxC,GAAsBF,EAAU,KAAI,OAC/CkD,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBF,EAAU,KAAO,GAAE,OAE3CkD,SAAA,CAEDlD,EAAQ,UAGbmD,EAAAA,GAAAA,KAACzF,GAAgB,KACjByF,EAAAA,GAAAA,KAAC7F,GAAkB,CACjBwG,MAAO,CACLK,OAAO,GAADzB,OAAKxC,GAAsBd,EAAY,KAAI,OACjD8D,UAEFD,EAAAA,GAAAA,MAACzF,GAAe,CACdsG,MAAO,CACLM,OAAO,GAAD1B,OACJxC,GAAsBd,EAAY,KAAO,GAAE,OAE7C8D,SAAA,CAED9D,EAAU,YAGM,uBASvC,EChWA,GARuB,WACrB,OACE+D,EAAAA,GAAAA,KAAC5K,EAAa,CAAA2K,UACZC,EAAAA,GAAAA,KAACkB,GAAU,KAGjB,C","sources":["images/icons.svg","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","pages/Statisctics.jsx"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"next-calendar-btn\",\n    viewBox: \"0 0 16 16\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 12L10 8L6 4\",\n    fill: \"none\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-circle-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M4.451 9.333c2.305-3.985 6.614-6.667 11.55-6.667 7.364 0 13.333 5.97 13.333 13.333s-5.97 13.333-13.333 13.333c-4.935 0-9.244-2.681-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M16 21.333l5.333-5.333-5.333-5.333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M2.667 16h18.667\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar-check-black\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M28 13.333h-24M28 16.667v-4.933c0-2.24 0-3.36-0.436-4.216-0.383-0.753-0.995-1.365-1.748-1.748-0.856-0.436-1.976-0.436-4.216-0.436h-11.2c-2.24 0-3.36 0-4.216 0.436-0.753 0.383-1.365 0.995-1.748 1.748-0.436 0.856-0.436 1.976-0.436 4.216v11.2c0 2.24 0 3.36 0.436 4.216 0.383 0.753 0.995 1.365 1.748 1.748 0.856 0.436 1.976 0.436 4.216 0.436h5.6M21.333 2.667v5.333M10.667 2.667v5.333M19.333 25.333l2.667 2.667 6-6\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar-check-blue\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M28 13.333h-24M28 16.667v-4.933c0-2.24 0-3.36-0.436-4.216-0.383-0.753-0.995-1.365-1.748-1.748-0.856-0.436-1.976-0.436-4.216-0.436h-11.2c-2.24 0-3.36 0-4.216 0.436-0.753 0.383-1.365 0.995-1.748 1.748-0.436 0.856-0.436 1.976-0.436 4.216v11.2c0 2.24 0 3.36 0.436 4.216 0.383 0.753 0.995 1.365 1.748 1.748 0.856 0.436 1.976 0.436 4.216 0.436h5.6M21.333 2.667v5.333M10.667 2.667v5.333M19.333 25.333l2.667 2.667 6-6\"\n  })), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 10.667v10.667M10.667 16h10.667M29.333 16c0 7.364-5.97 13.333-13.333 13.333s-13.333-5.97-13.333-13.333c0-7.364 5.97-13.333 13.333-13.333s13.333 5.97 13.333 13.333z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-moon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M27.656 17.393c-0.904 0.24-1.834 0.361-2.769 0.361-2.847 0-5.52-1.107-7.528-3.115-1.319-1.326-2.267-2.975-2.749-4.782s-0.484-3.709-0.002-5.516c0.060-0.226 0.060-0.464-0.001-0.689s-0.18-0.432-0.345-0.597c-0.165-0.165-0.371-0.284-0.597-0.344s-0.464-0.060-0.69 0c-2.262 0.603-4.327 1.79-5.985 3.443-5.197 5.197-5.197 13.657 0 18.857 1.235 1.242 2.705 2.227 4.323 2.898s3.354 1.014 5.106 1.009c1.752 0.005 3.487-0.338 5.105-1.008s3.087-1.655 4.322-2.897c1.654-1.659 2.841-3.724 3.444-5.988 0.060-0.226 0.059-0.463-0.002-0.689s-0.18-0.431-0.345-0.596-0.371-0.284-0.596-0.345c-0.226-0.061-0.463-0.061-0.689-0.001zM23.96 23.128c-0.988 0.993-2.163 1.781-3.458 2.317s-2.682 0.81-4.084 0.807c-1.402 0.003-2.79-0.271-4.085-0.807s-2.471-1.324-3.459-2.318c-4.157-4.159-4.157-10.927 0-15.085 0.803-0.802 1.731-1.47 2.747-1.977-0.149 1.919 0.119 3.847 0.784 5.653s1.712 3.447 3.070 4.811c1.361 1.362 3.002 2.412 4.808 3.077s3.736 0.931 5.656 0.777c-0.51 1.014-1.178 1.941-1.979 2.745z\"\n  })), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M3.333 28.667l7.399-2.846c0.473-0.182 0.71-0.273 0.931-0.392 0.197-0.106 0.384-0.227 0.56-0.364 0.198-0.154 0.378-0.333 0.736-0.692l15.040-15.040c1.473-1.473 1.473-3.861 0-5.333s-3.861-1.473-5.333 0l-15.040 15.040c-0.359 0.359-0.538 0.538-0.692 0.736-0.137 0.176-0.259 0.364-0.364 0.561-0.119 0.221-0.21 0.458-0.392 0.931l-2.846 7.399zM3.333 28.667l2.744-7.135c0.196-0.511 0.295-0.766 0.463-0.883 0.147-0.102 0.329-0.141 0.505-0.107 0.201 0.038 0.395 0.232 0.782 0.619l3.012 3.012c0.387 0.387 0.58 0.58 0.619 0.782 0.034 0.176-0.005 0.358-0.107 0.505-0.117 0.168-0.372 0.267-0.883 0.463l-7.135 2.744z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-sun\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M9.324 16c0 3.681 2.995 6.676 6.676 6.676s6.676-2.995 6.676-6.676c0-3.681-2.995-6.676-6.676-6.676s-6.676 2.995-6.676 6.676zM16 11.991c2.211 0 4.009 1.799 4.009 4.009s-1.799 4.009-4.009 4.009c-2.211 0-4.009-1.799-4.009-4.009s1.799-4.009 4.009-4.009zM14.664 25.333h2.667v4h-2.667v-4zM14.664 2.667h2.667v4h-2.667v-4zM2.664 14.667h4v2.667h-4v-2.667zM25.331 14.667h4v2.667h-4v-2.667zM5.625 24.484l2.827-2.829 1.887 1.885-2.827 2.829-1.887-1.885zM21.653 8.459l2.829-2.829 1.885 1.885-2.829 2.829-1.885-1.885zM8.456 10.345l-2.829-2.829 1.887-1.885 2.827 2.829-1.884 1.885zM26.368 24.485l-1.885 1.885-2.829-2.829 1.885-1.885 2.829 2.829z\"\n  })), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M12 4h8\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M4 8h24\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M6.667 8l0.801 12.018c0.149 2.231 0.223 3.347 0.588 4.243 0.662 1.627 2.004 2.883 3.672 3.435 0.919 0.304 2.037 0.304 4.273 0.304v0c2.236 0 3.354 0 4.273-0.304 1.668-0.552 3.009-1.808 3.671-3.435 0.365-0.896 0.439-2.012 0.588-4.243l0.801-12.018\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-check-black\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M21.333 24l2.667 2.667 5.333-5.333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 20.667h-6c-1.861 0-2.791 0-3.548 0.23-1.705 0.517-3.038 1.851-3.555 3.556-0.23 0.757-0.23 1.687-0.23 3.548v0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M13.333 16c3.314 0 6-2.686 6-6s-2.686-6-6-6c-3.314 0-6 2.686-6 6s2.686 6 6 6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-check-blue\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M21.333 24l2.667 2.667 5.333-5.333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 20.667h-6c-1.861 0-2.791 0-3.548 0.23-1.705 0.517-3.038 1.851-3.555 3.556-0.23 0.757-0.23 1.687-0.23 3.548v0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M13.333 16c3.314 0 6-2.686 6-6s-2.686-6-6-6c-3.314 0-6 2.686-6 6s2.686 6 6 6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"EmailDone\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3cbc81\",\n    style: {\n      fill: \"var(--color1, #3cbc81)\"\n    },\n    d: \"M14.133 18.4l-2.9-2.9c-0.244-0.244-0.55-0.361-0.916-0.349s-0.673 0.138-0.917 0.383-0.367 0.556-0.367 0.933c0 0.378 0.122 0.689 0.367 0.933l3.8 3.8c0.244 0.244 0.556 0.367 0.933 0.367s0.689-0.122 0.933-0.367l7.567-7.567c0.244-0.244 0.361-0.55 0.351-0.917s-0.14-0.672-0.384-0.916-0.556-0.367-0.933-0.367c-0.378 0-0.689 0.122-0.933 0.367l-6.6 6.6zM16 29.333c-1.844 0-3.578-0.35-5.2-1.051s-3.033-1.649-4.233-2.849-2.15-2.611-2.849-4.233c-0.7-1.622-1.051-3.356-1.051-5.2s0.35-3.578 1.051-5.2c0.7-1.622 1.649-3.033 2.849-4.233s2.611-2.15 4.233-2.851c1.622-0.7 3.356-1.049 5.2-1.049s3.578 0.35 5.2 1.049c1.622 0.7 3.033 1.651 4.233 2.851s2.15 2.611 2.849 4.233c0.7 1.622 1.051 3.356 1.051 5.2s-0.35 3.578-1.051 5.2c-0.7 1.622-1.649 3.033-2.849 4.233s-2.611 2.15-4.233 2.849c-1.622 0.7-3.356 1.051-5.2 1.051zM16 26.667c2.956 0 5.472-1.039 7.551-3.116s3.116-4.595 3.116-7.551c0-2.956-1.039-5.472-3.116-7.551s-4.595-3.116-7.551-3.116c-2.956 0-5.472 1.039-7.549 3.116s-3.117 4.595-3.117 7.551c0 2.956 1.039 5.472 3.117 7.551s4.594 3.116 7.549 3.116z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"EmailError\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#e74a3b\",\n    style: {\n      fill: \"var(--color2, #e74a3b)\"\n    },\n    d: \"M14.667 20h2.667v2.667h-2.667v-2.667zM14.667 9.333h2.667v8h-2.667v-8zM15.987 2.667c-7.36 0-13.32 5.973-13.32 13.333s5.96 13.333 13.32 13.333c7.373 0 13.347-5.973 13.347-13.333s-5.973-13.333-13.347-13.333zM16 26.667c-5.893 0-10.667-4.773-10.667-10.667s4.773-10.667 10.667-10.667c5.893 0 10.667 4.773 10.667 10.667s-4.773 10.667-10.667 10.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"logIn\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color3, #fff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M20 4h1.6c2.24 0 3.36 0 4.216 0.436 0.753 0.383 1.364 0.995 1.748 1.748 0.436 0.856 0.436 1.976 0.436 4.216v11.2c0 2.24 0 3.36-0.436 4.216-0.384 0.753-0.996 1.364-1.748 1.748-0.856 0.436-1.976 0.436-4.216 0.436h-1.6M13.333 9.333l6.667 6.667M20 16l-6.667 6.667M20 16h-16\"\n  })), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"menu\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.813 11.931h-15.625c-0.688 0-1.25-0.563-1.25-1.25s0.563-1.25 1.25-1.25h15.625c0.688 0 1.25 0.563 1.25 1.25s-0.563 1.25-1.25 1.25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.813 22.569h-15.625c-0.688 0-1.25-0.563-1.25-1.25s0.563-1.25 1.25-1.25h15.625c0.688 0 1.25 0.563 1.25 1.25s-0.563 1.25-1.25 1.25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.813 17.25h-15.625c-0.688 0-1.25-0.563-1.25-1.25s0.563-1.25 1.25-1.25h15.625c0.688 0 1.25 0.563 1.25 1.25s-0.563 1.25-1.25 1.25z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.ef321361b5113284b96128b6e40e7ba9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nexport const StatisticPage = styled.div`\n  height: calc(100vh - 120px);\n  @media (min-width: 768px) {\n    height: calc(100vh - 132px);\n  }\n  @media (min-width: 1440px) {\n    height: calc(100vh - 118px);\n  }\n`;\nexport const StatisticsWrapper = styled.div`\n  padding: 28px 14px;\n  background-color: ${({ theme }) => theme.userProfile.bgColor};\n  border-radius: 16px;\n  @media (min-width: 768px) {\n    padding: 100px 50px;\n  }\n  @media (min-width: 1440px) {\n    padding: 120px 140px;\n  }\n`;\nexport const MonthSelectionSection = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  justify-content: space-between;\n`;\nexport const MonthAndLegendWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nexport const LegendSection = styled.div`\n  display: flex;\n`;\nexport const LegendParagraph = styled.p`\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-right: 8px;\n  color: ${({ theme }) => theme.textColors.main};\n  @media (min-width: 1440px) {\n    font-size: 16px;\n  }\n`;\nexport const ButtonsWrapper = styled.div`\n  @media (min-width: 768px) {\n    margin-left: 8px;\n  }\n`;\nexport const NextDayBtn = styled.button`\n  background-color: ${({ theme }) => theme.userProfile.bgColor};\n  border: 1px solid ${({ theme }) => theme.borderColors.calendar};\n  cursor: pointer;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  height: 30px;\n  width: 36px;\n  position: relative;\n`;\nexport const PrevDayBtn = styled.button`\n  background-color: ${({ theme }) => theme.userProfile.bgColor};\n  border: 1px solid ${({ theme }) => theme.borderColors.calendar};\n  cursor: pointer;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  height: 30px;\n  width: 36px;\n  position: relative;\n`;\nexport const NextDayBtnIcon = styled.svg`\n  position: absolute;\n  padding: 0;\n  height: 16px;\n  width: 16px;\n  stroke: ${({ theme }) => theme.textColors.textSecondary};\n  top: 7px;\n  left: 10px;\n`;\nexport const PrevDayBtnIcon = styled.svg`\n  position: absolute;\n  padding: 0;\n  height: 16px;\n  width: 16px;\n  stroke: ${({ theme }) => theme.textColors.textSecondary};\n  rotate: -180deg;\n  top: 7px;\n  left: 10px;\n`;\nexport const PinkMarker = styled.span`\n  height: 8px;\n  width: 8px;\n  background-color: var(--linear-pink-color);\n  border-radius: 50%;\n  margin-right: 10px;\n  display: inline-block;\n`;\nexport const BlueMarker = styled.span`\n  height: 8px;\n  width: 8px;\n  background-color: var(--main-blue-color);\n  border-radius: 50%;\n  margin-right: 8px;\n  display: inline-block;\n`;\n\nexport const StatsSection = styled.div`\n  position: relative;\n  margin-top: 20px;\n  border-radius: 20px;\n  border: 0.8px solid ${({ theme }) => theme.borderColors.statisticBorder};\n  padding: 36px 14px 60px;\n`;\nexport const TasksHeading = styled.h3`\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 21px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${({ theme }) => theme.textColors.main};\n`;\nexport const StatsTable = styled.div``;\nexport const StatsRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 28px;\n`;\nexport const StatsNum = styled.p`\n  width: 24px;\n  margin-right: 14px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: 0em;\n  text-align: right;\n  display: block;\n  color: ${({ theme }) => theme.textColors.main};\n`;\nexport const StatsLine = styled.div`\n  width: 100%;\n  top: 3px;\n  height: 1px;\n  border: 1px solid ${({ theme }) => theme.borderColors.statisticBorder};\n  color: ${({ theme }) => theme.borderColors.statisticBorder};\n`;\nexport const StatsFooter = styled.div`\n  margin-top: 5px;\n  padding-left: 24px;\n  display: flex;\n  gap: 24px;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 34px;\n  left: 45px;\n  @media (min-width: 768px) {\n    padding-left: 80px;\n    padding-right: 80px;\n    gap: 112px;\n  }\n  @media (min-width: 1440px) {\n    padding-left: 160px;\n    padding-right: 160px;\n    gap: 136px;\n  }\n`;\nexport const StatsFooterRow = styled.div``;\nexport const StatsFooterRowText = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: ${({ theme }) => theme.textColors.main};\n`;\nexport const RowPercentageWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  margin-bottom: 20px;\n  left: 0px;\n  bottom: 31px;\n`;\nexport const RowPercentageDay = styled.div`\n  height: 246px;\n  width: 22px;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  background-image: linear-gradient(\n    0deg,\n    rgba(255, 210, 221, 1),\n    rgba(255, 210, 221, 0)\n  );\n  @media (min-width: 768px) {\n    width: 27px;\n  }\n`;\nexport const RowPercentageMonth = styled.div`\n  width: 22px;\n  height: 246px;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  background-image: linear-gradient(\n    0deg,\n    rgba(62, 133, 243, 1),\n    rgba(62, 133, 243, 0)\n  );\n  @media (min-width: 768px) {\n    width: 27px;\n  }\n  @media (min-width: 1440px) {\n  }\n`;\nexport const PercentageValue = styled.div`\n  position: absolute;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: left;\n  bottom: 286px;\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: left;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 16px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: left;\n  }\n`;\nexport const PercentageHolder = styled.div`\n  height: 246px;\n  width: 4px;\n  @media (min-width: 768px) {\n    width: 8px;\n  }\n  @media (min-width: 1440px) {\n    width: 10px;\n  }\n`;\n// aima25@mail.com\n// Aimaaima25.\n","import React, { useEffect, useState } from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTasksOfMonth } from 'redux/calendar/calendar.operations';\nimport Icons from '../../images/icons.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './custom-datepicker.css';\nimport {\n  StatisticsWrapper,\n  MonthSelectionSection,\n  MonthAndLegendWrapper,\n  LegendSection,\n  LegendParagraph,\n  PrevDayBtn,\n  NextDayBtn,\n  PinkMarker,\n  BlueMarker,\n  NextDayBtnIcon,\n  PrevDayBtnIcon,\n  ButtonsWrapper,\n  StatsSection,\n  TasksHeading,\n  StatsTable,\n  StatsRow,\n  StatsLine,\n  StatsNum,\n  StatsFooter,\n  StatsFooterRow,\n  StatsFooterRowText,\n  RowPercentageWrapper,\n  RowPercentageDay,\n  RowPercentageMonth,\n  PercentageValue,\n  PercentageHolder,\n} from './Statistics.styled';\n\nfunction Statistics() {\n  const dispatch = useDispatch();\n  const currentDate = useSelector(state => state.calendar.currentMonth);\n  const tasks = useSelector(state => state.calendar.tasks);\n  const [startDate, setStartDate] = useState(new Date(currentDate));\n  const [toDoMonth, setToDoMonth] = useState(0);\n  const [inProgressMonth, setInProgressMonth] = useState(0);\n  const [doneMonth, setDoneMonth] = useState(0);\n  const [toDoDay, setToDoDay] = useState(0);\n  const [inProgressDay, setInProgressDay] = useState(0);\n  const [doneDay, setDoneDay] = useState(0);\n  const percentageRowHight = 246;\n  const fullCurrentDate = new Date(currentDate);\n  const decreaseDayByOne = () => {\n    const prevDay = new Date(startDate.setDate(startDate.getDate() - 1));\n    if (fullCurrentDate <= prevDay) {\n      setStartDate(prevDay);\n    }\n  };\n  const increaseDayByOne = () => {\n    const nextDay = new Date(startDate.setDate(startDate.getDate() + 1));\n    setStartDate(nextDay);\n  };\n  const percentageMonthCounting = tasks => {\n    if (!Array.isArray(tasks) || tasks.length === 0) {\n      setDoneMonth(0);\n      setInProgressMonth(0);\n      setToDoMonth(0);\n      return;\n    }\n\n    let todoCount = 0;\n    let inProgressCount = 0;\n    let doneCount = 0;\n\n    for (const task of tasks) {\n      switch (task.category) {\n        case 'to-do':\n          todoCount++;\n          break;\n        case 'in-progress':\n          inProgressCount++;\n          break;\n        case 'done':\n          doneCount++;\n          break;\n        default:\n          break;\n      }\n    }\n\n    const totalCount = tasks.length;\n\n    const todoPercentage = (todoCount / totalCount) * 100;\n    const inProgressPercentage = (inProgressCount / totalCount) * 100;\n    const donePercentage = (doneCount / totalCount) * 100;\n    setDoneMonth(donePercentage.toFixed());\n    setInProgressMonth(inProgressPercentage.toFixed());\n    setToDoMonth(todoPercentage.toFixed());\n  };\n  const percentageDayCounting = tasks => {\n    if (!Array.isArray(tasks) || tasks.length === 0) {\n      setDoneDay(0);\n      setInProgressDay(0);\n      setToDoDay(0);\n      return;\n    }\n\n    const year = startDate.getFullYear();\n    const month = String(startDate.getMonth() + 1).padStart(2, '0');\n    const day = String(startDate.getDate()).padStart(2, '0');\n    const dateString = `${year}-${month}-${day}`;\n    const currentDayTasks = tasks.filter(el => el.date === dateString);\n\n    let todoCount = 0;\n    let inProgressCount = 0;\n    let doneCount = 0;\n\n    if (!Array.isArray(currentDayTasks) || currentDayTasks.length === 0) {\n      setDoneDay(0);\n      setInProgressDay(0);\n      setToDoDay(0);\n      return;\n    }\n\n    for (const task of currentDayTasks) {\n      switch (task.category) {\n        case 'to-do':\n          todoCount++;\n          break;\n        case 'in-progress':\n          inProgressCount++;\n          break;\n        case 'done':\n          doneCount++;\n          break;\n        default:\n          break;\n      }\n    }\n\n    const totalCount = currentDayTasks.length;\n    const todoPercentage = (todoCount / totalCount) * 100;\n    const inProgressPercentage = (inProgressCount / totalCount) * 100;\n    const donePercentage = (doneCount / totalCount) * 100;\n    setDoneDay(donePercentage.toFixed());\n    setInProgressDay(inProgressPercentage.toFixed());\n    setToDoDay(todoPercentage.toFixed());\n  };\n\n  useEffect(() => {\n    const month = startDate.getMonth();\n    const year = startDate.getUTCFullYear();\n    const date = {\n      month,\n      year,\n    };\n    dispatch(getTasksOfMonth(date));\n  }, [dispatch, startDate]);\n  useEffect(() => {\n    percentageMonthCounting(tasks);\n  }, [tasks]);\n  useEffect(() => {\n    percentageDayCounting(tasks);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tasks]);\n  return (\n    <StatisticsWrapper>\n      <MonthAndLegendWrapper>\n        <MonthSelectionSection>\n          <ReactDatePicker\n            calendarStartDay={1}\n            dateFormat=\"d MMMM  yyyy \"\n            minDate={new Date()}\n            selected={startDate}\n            className=\"custom-datepicker\"\n            onChange={date => setStartDate(date)}\n            chooseDayAriaLabelPrefix=\"1\"\n          />\n          <ButtonsWrapper>\n            {startDate <= fullCurrentDate ? (\n              <PrevDayBtn onClick={decreaseDayByOne} disabled={true}>\n                <PrevDayBtnIcon\n                  disabled={true}\n                  style={{\n                    stroke: '#dce3e5',\n                  }}\n                >\n                  <use href={Icons + '#next-calendar-btn'} />\n                </PrevDayBtnIcon>\n              </PrevDayBtn>\n            ) : (\n              <PrevDayBtn onClick={decreaseDayByOne}>\n                <PrevDayBtnIcon>\n                  <use href={Icons + '#next-calendar-btn'} />\n                </PrevDayBtnIcon>\n              </PrevDayBtn>\n            )}\n\n            <NextDayBtn onClick={increaseDayByOne}>\n              <NextDayBtnIcon>\n                <use href={Icons + '#next-calendar-btn'} />\n              </NextDayBtnIcon>\n            </NextDayBtn>\n          </ButtonsWrapper>\n        </MonthSelectionSection>\n        <LegendSection>\n          <LegendParagraph>\n            <PinkMarker />\n            By Day\n          </LegendParagraph>\n          <LegendParagraph>\n            <BlueMarker />\n            By Month\n          </LegendParagraph>\n        </LegendSection>\n      </MonthAndLegendWrapper>\n      <StatsSection>\n        <TasksHeading>Tasks</TasksHeading>\n        <StatsTable>\n          <StatsRow>\n            <StatsNum>100</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsRow>\n            <StatsNum>80</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsRow>\n            <StatsNum>60</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsRow>\n            <StatsNum>40</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsRow>\n            <StatsNum>20</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsRow>\n            <StatsNum>0</StatsNum>\n            <StatsLine />\n          </StatsRow>\n          <StatsFooter>\n            <StatsFooterRow>\n              <StatsFooterRowText>\n                <RowPercentageWrapper>\n                  <RowPercentageDay\n                    style={{\n                      height: `${percentageRowHight * (toDoDay / 100)}px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (toDoDay / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {toDoDay}%\n                    </PercentageValue>\n                  </RowPercentageDay>\n                  <PercentageHolder />\n                  <RowPercentageMonth\n                    style={{\n                      height: `${percentageRowHight * (toDoMonth / 100)}px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (toDoMonth / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {toDoMonth}%\n                    </PercentageValue>\n                  </RowPercentageMonth>\n                </RowPercentageWrapper>\n                To Do\n              </StatsFooterRowText>\n            </StatsFooterRow>\n            <StatsFooterRow>\n              <StatsFooterRowText>\n                <RowPercentageWrapper>\n                  <RowPercentageDay\n                    style={{\n                      height: `${percentageRowHight * (inProgressDay / 100)}px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (inProgressDay / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {inProgressDay}%\n                    </PercentageValue>\n                  </RowPercentageDay>\n                  <PercentageHolder />\n                  <RowPercentageMonth\n                    style={{\n                      height: `${\n                        percentageRowHight * (inProgressMonth / 100)\n                      }px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (inProgressMonth / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {inProgressMonth}%\n                    </PercentageValue>\n                  </RowPercentageMonth>\n                </RowPercentageWrapper>\n                In Progress\n              </StatsFooterRowText>\n            </StatsFooterRow>\n            <StatsFooterRow>\n              <StatsFooterRowText>\n                <RowPercentageWrapper>\n                  <RowPercentageDay\n                    style={{\n                      height: `${percentageRowHight * (doneDay / 100)}px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (doneDay / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {doneDay}%\n                    </PercentageValue>\n                  </RowPercentageDay>\n                  <PercentageHolder />\n                  <RowPercentageMonth\n                    style={{\n                      height: `${percentageRowHight * (doneMonth / 100)}px`,\n                    }}\n                  >\n                    <PercentageValue\n                      style={{\n                        bottom: `${\n                          percentageRowHight * (doneMonth / 100) + 40\n                        }px`,\n                      }}\n                    >\n                      {doneMonth}%\n                    </PercentageValue>\n                  </RowPercentageMonth>\n                </RowPercentageWrapper>\n                Done\n              </StatsFooterRowText>\n            </StatsFooterRow>\n          </StatsFooter>\n        </StatsTable>\n      </StatsSection>\n    </StatisticsWrapper>\n  );\n}\n\nexport default Statistics;\n","import Statistics from '../components/Statistics/Statistics';\nimport { StatisticPage } from 'components/Statistics/Statistics.styled';\nconst StatisticsPage = () => {\n  return (\n    <StatisticPage>\n      <Statistics />\n    </StatisticPage>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["StatisticPage","styled","div","_templateObject","_taggedTemplateLiteral","StatisticsWrapper","_templateObject2","_ref","theme","userProfile","bgColor","MonthSelectionSection","_templateObject3","MonthAndLegendWrapper","_templateObject4","LegendSection","_templateObject5","LegendParagraph","p","_templateObject6","_ref2","textColors","main","ButtonsWrapper","_templateObject7","NextDayBtn","button","_templateObject8","_ref3","_ref4","borderColors","calendar","PrevDayBtn","_templateObject9","_ref5","_ref6","NextDayBtnIcon","svg","_templateObject10","_ref7","textSecondary","PrevDayBtnIcon","_templateObject11","_ref8","PinkMarker","span","_templateObject12","BlueMarker","_templateObject13","StatsSection","_templateObject14","_ref9","statisticBorder","TasksHeading","h3","_templateObject15","_ref10","StatsTable","_templateObject16","StatsRow","_templateObject17","StatsNum","_templateObject18","_ref11","StatsLine","_templateObject19","_ref12","_ref13","StatsFooter","_templateObject20","StatsFooterRow","_templateObject21","StatsFooterRowText","_templateObject22","_ref14","RowPercentageWrapper","_templateObject23","RowPercentageDay","_templateObject24","RowPercentageMonth","_templateObject25","PercentageValue","_templateObject26","PercentageHolder","_templateObject27","dispatch","useDispatch","currentDate","useSelector","state","currentMonth","tasks","_useState","useState","Date","_useState2","_slicedToArray","startDate","setStartDate","_useState3","_useState4","toDoMonth","setToDoMonth","_useState5","_useState6","inProgressMonth","setInProgressMonth","_useState7","_useState8","doneMonth","setDoneMonth","_useState9","_useState10","toDoDay","setToDoDay","_useState11","_useState12","inProgressDay","setInProgressDay","_useState13","_useState14","doneDay","setDoneDay","percentageRowHight","fullCurrentDate","decreaseDayByOne","prevDay","setDate","getDate","useEffect","date","month","getMonth","year","getUTCFullYear","getTasksOfMonth","Array","isArray","length","_step","todoCount","inProgressCount","doneCount","_iterator","_createForOfIteratorHelper","s","n","done","value","category","err","e","f","totalCount","todoPercentage","inProgressPercentage","toFixed","percentageMonthCounting","getFullYear","String","padStart","day","dateString","concat","currentDayTasks","filter","el","_step2","_iterator2","percentageDayCounting","_jsxs","children","_jsx","ReactDatePicker","calendarStartDay","dateFormat","minDate","selected","className","onChange","chooseDayAriaLabelPrefix","onClick","disabled","style","stroke","href","Icons","nextDay","height","bottom","Statistics"],"sourceRoot":""}